#Let Atom highlight this: -*- shell-script -*-

# Load zsh-completion-generator when needed and unload when done
generatecomp(){
    zplugin ice from"gh" silent pick"zsh-completion-generator.plugin.zsh" blockf;
    zplugin light RobSis/zsh-completion-generator && gencomp $1;
    zplugin creinstall -q RobSis/zsh-completion-generator;
    zplugin unload -q RobSis/zsh-completion-generator;
}

# Shows top used commands
history-stat(){ fc -ln 0 | awk '{print $1}' | sort | uniq -c | sort -nr | head; }

auto-ls-modecheck(){
    if [[ $(tlp-stat -s) =~ 'Mode           = battery' ]]; then
        varcache=("${AUTO_LS_COMMANDS[@]}")
        AUTO_LS_COMMANDS=("${AUTO_LS_COMMANDSBAT[@]}")
        auto-ls
        AUTO_LS_COMMANDS=("${varcache[@]}")
        break
    fi
}

auto-ls-colorls(){
    if [ -d .git ] && ! [[ -n $SSH_CONNECTION ]]; then
      eval "${colorlsgitcommand[@]}"
    else
      eval "${colorlscommand[@]}"
    fi
}

dotscheck(){
  local LC_ALL=C dotsvar1 dotsvar2 dotsvar3 dotsvar4

  dotsvar1=("${dotsvar[@]/%/'}")
  dotsvar2=("${dotsvar1[@]/#/-e '}")
  dotsvar3=(grep -v "${dotsvar2[*]}")
  dotsvar4=$(dots status | eval "${dotsvar3[*]}")
  if [[ "$dotsvar4" =~ "Changes not staged" ]] && [[ "$dotsvar4" =~ "modified|Changes to be committed" ]]; then
    echo ""
    dots status -s
  elif [[ "$dotsvar4" =~ "ahead of" ]]; then
    dots status
    dots push
  elif [[ "$dotsvar4" =~ "is behind" ]]; then
    dots status
  fi
}

# Update locally built git projects
updatelocal(){
  trap 'loadautols; if [[ -n $popit ]]; then cd - 2> /dev/null; fi; return 0' SIGINT
  local cores cache popit
  cores=$(nproc)
  $isdolphin || zplugin unload -q desyncr/auto-ls
  cache=$gdir

  if [[ $gdir != "$PWD" ]]; then popit="set"; fi
  if [[ $1 = "-p" || $1 = "--pwd" || $2 = "-p" || $2 = "--pwd" || $1 = "-r" || $1 = "--repull" ]]; then
    unset popit
    gdir=$PWD
  fi

  cd $gdir || { echo "Error cd-ing into '$gdir', is it a real directory?" && return 1; }
  ls
  echo ""

  loadautols(){
    zplugin ice load'[[ $isdolphin ]]' lucid
    zplugin load desyncr/auto-ls
  }

  fetchupdates(){
    if [ -d .git ]; then
      git fetch -j $cores 2>&1
      echo "Fetching $(basename $PWD)..."
    fi
  }

  checkupdates(){
    if [ -d .git ]; then
      UPSTREAM=${1:-'@{u}'}
      LOCAL=$(git rev-parse @)
      REMOTE=$(git rev-parse "$UPSTREAM" 2>/dev/null)
      BASE=$(git merge-base @ "$UPSTREAM" 2>/dev/null)
      gitname=$(basename $PWD)

      if [ -z $BASE ] || [ -z $REMOTE ]; then
        echo -e "\e[00;31mCustom commit checked out $gitname\e[00m"
      elif [ $LOCAL = $REMOTE ]; then
        echo "Up-to-date $gitname"
      elif [ $LOCAL = $BASE ]; then
        echo -e "\e[00;31mNeed to pull $gitname\e[00m"
      elif [ $REMOTE = $BASE ]; then
        echo -e "\e[00;31mNeed to push $gitname\e[00m"
      else
        echo -e "\e[00;31mDiverged $gitname\e[00m"
      fi
    fi
  }

  changelogs(){
    if [ -d .git ]; then
      currentbranch=$(git_current_branch)
      tracked_remote=$(git config "branch.$currentbranch.remote")
      if [ -z "$currentbranch" ] || [ -z "$(UPSTREAM=${1:-'@{u}'}; git rev-parse "$UPSTREAM" 2>/dev/null)" ] ; then return; fi
      changes=$(git log "$currentbranch".."$tracked_remote"/"$currentbranch")

      if [ $changes ]; then echo "BEGIN===================================================="
      echo "$PWD"; fi
      git log --color=always --graph --pretty='''%Cred%h%Creset -%C(auto)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset''' --stat "$currentbranch".."$tracked_remote"/"$currentbranch"
      if [ $changes ]; then echo "$PWD"; echo "======================================================END"
      echo ""; fi
    fi
  }
  
  connected(){
    ping -q -w 1 -c 1 `ip r | grep default | cut -d ' ' -f 3` &> /dev/null && return 0 || return 1
  }

  case $1 in
    --changes )
      { for d in ./*/ ; do (builtin cd "$d" && checkupdates); done
      echo ""
      for d in ./*/ ; do (builtin cd "$d" && changelogs); done } | less -R
      ;;
    --repull | -r )
      shift 1
      local UPSTREAM REMOTE
      UPSTREAM=${1:-'@{u}'}
      REMOTE=$(git rev-parse "$UPSTREAM" 2>/dev/null)
      if [[ -z $REMOTE ]]; then echo "Commit checked out, pull manually"; loadautols; return; fi

      echo "Assuming --pwd"
      echo "Are you sure you want to repull $PWD"
      local IFS=
      read -n 1 key
      if [ "$key" = "" ]; then
        git reset --hard; git clean -fdx; git pull -j $cores
      fi
      ;;
    * )
      echo "Fetching latest updates..."
      connected && (for d in ./*/ ; do (builtin cd "$d" && fetchupdates) & done | GREP_COLORS='ms=1;34' grep -E --color '.*From.*|$'; wait) || echo "You're not connected to the internet"
      echo ""
      for d in ./*/ ; do (builtin cd "$d" && checkupdates); done
      echo ""
      ;;
  esac

  gdir=$cache
  if [[ -n $popit ]]; then cd - 2> /dev/null; fi

  loadautols
  unfunction loadautols changelogs checkupdates fetchupdates
}
