#!/bin/bash

backlight_dir=/sys/class/backlight/intel_backlight
location="36.013901:-78.946400"
temphigh=6500

trap 'echo "done" > /home/nicholas/Scripts/redbrightness/cache; echo "curtemp=$curtemp" > /home/nicholas/Scripts/redbrightness/curtemp; exit' 0

luminance() {
    read -r level < "$backlight_dir"/actual_brightness
    factor=$((max))
    new_brightness="$(bc -l <<< "scale = 2; $level / $factor")"
    printf '%f\n' $new_brightness
}
read -r max < "$backlight_dir"/max_brightness

transition() {
    source "/home/nicholas/Scripts/redbrightness/curtemp"
    echo "transitioning" > /home/nicholas/Scripts/redbrightness/cache
    extra=1
    if [[ $1 = "turnoff" ]]; then
      interval=$(bc <<< "($temphigh - $curtemp)/40")
      remainder=$(bc <<< "($temphigh - $curtemp)%40")
        while [[ $curtemp -lt $temphigh ]]; do
            if [[ $count -lt $remainder ]]; then
                ((++count))
            else
                extra=0
            fi
            echo "$curtemp + $interval + $extra"
            curtemp=$(($curtemp + interval + extra))
            redshift -P -O $curtemp -b "$(luminance)"
            echo "New temp $curtemp"
        done
    elif [[ $1 = "turnon" ]]; then
      if [[ $2 != "skip" ]]; then
        temp="$(redshift -p -l $location | grep -oP '(?<=Color temperature: )[0-9]+')"
      elif [[ $2 = "startup" ]]; then
        xrandr --output eDP-1 --brightness 1
        brillo -S 100
        curtemp=6500
        echo "$2"
      fi
      interval=$(bc <<< "sqrt((($temp - $curtemp)/40)^2)")
      remainder=$(bc <<< "sqrt((($temp - $curtemp)%40)^2)")
      while [[ $curtemp -gt $temp ]]; do
          if [[ $count -lt $remainder ]]; then
              ((++count))
          else
              extra=0
          fi
          echo "$curtemp - $interval - $extra"
          curtemp=$((curtemp - interval - extra))
          redshift -P -O $curtemp -b "$(luminance)"
          echo "New temp $curtemp"
      done
      while [[ $curtemp -lt $temp ]]; do
          if [[ $count -lt $remainder ]]; then
              ((++count))
          else
              extra=0
            fi
            echo "$curtemp + $interval + $extra"
            curtemp=$(($curtemp + interval + extra))
            redshift -P -O $curtemp -b "$(luminance)"
            echo "New temp $curtemp"
      done
    fi
    echo "done" > /home/nicholas/Scripts/redbrightness/cache
    echo "curtemp=$curtemp" > /home/nicholas/Scripts/redbrightness/curtemp
}

while [[ $(cat /home/nicholas/Scripts/redbrightness/cache) = transitioning ]]; do
    ((++timeout))
    sleep .2
    echo "transitioning..."
    if [[ $timeout -gt 8 ]]; then
      echo "done" > /home/nicholas/Scripts/redbrightness/cache
    fi
done

if [[ $1 = "--on" ]]; then
  pkill -f "toggleredshift --off"
  transition turnon $2
  inotifywait -me modify --format '' "$backlight_dir"/actual_brightness | while read; do
    temp="$(redshift -p -l $location | grep -oP '(?<=Color temperature: )[0-9]+')"
    if [[ $temp != "$curtemp" ]]; then
      transition turnon skip
    else
      redshift -o -P -l $location -b "$(luminance)"
    fi
    echo "curtemp=$temp" > /home/nicholas/Scripts/redbrightness/curtemp
  done
elif [[ $1 = "--off" ]]; then
  pkill -f "toggleredshift --on"
  transition turnoff
  inotifywait -me modify --format '' "$backlight_dir"/actual_brightness | while read; do
    xrandr --output eDP-1 --brightness "$(luminance)"
  done
fi
